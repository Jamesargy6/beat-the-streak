name: deploy

on:
  push:
    branches: 
      - main
  workflow_dispatch:

env:
  AWS_REGION : "us-west-2"

jobs:

  data-storage-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
        working-directory: data-storage

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: './data-storage/.nvmrc'

      - name: Install sls
        run: npm install -g serverless

      - name: Install packages
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::104843235006:role/github-access-role
          role-session-name: data-storage-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to dev
        run: sls deploy --stage dev --region ${{ env.AWS_REGION }} --force

  data-scraper-app-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
        working-directory: data-scraper-app

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: './data-scraper-app/.nvmrc'

      - name: Install sls
        run: npm install -g serverless

      - name: Install packages
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::104843235006:role/github-access-role
          role-session-name: data-scraper-app-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to dev
        run: sls deploy --stage dev --region ${{ env.AWS_REGION }} --force
  
  workflow-orchestration-deploy:
    needs: [data-storage-deploy, data-scraper-app-deploy]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
        working-directory: workflow-orchestration

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: './workflow-orchestration/.nvmrc'

      - name: Install sls
        run: npm install -g serverless

      - name: Install packages
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::104843235006:role/github-access-role
          role-session-name: workflow-orchestration-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to dev
        run: sls deploy --stage dev --region ${{ env.AWS_REGION }} --force
