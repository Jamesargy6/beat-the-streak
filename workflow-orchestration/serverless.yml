app: workflow-orchestration 
service: workflow-orchestration

plugins:
  - serverless-plugin-typescript
  - serverless-step-functions

custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.json'

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    deploymentRole: 'arn:aws:iam::104843235006:role/data-scraper-app-CloudFormationExecutionRole'

functions:
  prepareDataScraperInput:
    handler: src/handler.prepareDataScraperInput

stepFunctions:
  stateMachines:
    BTSDataScraper:
      type: EXPRESS
      loggingConfig:
        level: ALL
        includeExecutionData: true
        destinations:
          - Fn::GetAtt: [BTSDataScraperLogGroup, Arn]
      definition:
        StartAt: PrepareInput
        States:
          PrepareInput:
            Type: Task
            Resource:
              Fn::GetAtt: [prepareDataScraperInput, Arn]
            Next: GetGames
          GetGames:
            Type: Map
            Iterator:
              StartAt: GetGameRange
              States:
                GetGameRange:
                  Type: Task
                  Resource: arn:aws:lambda:us-west-2:104843235006:function:data-scraper-app-${sls:stage}-getGames
                  Next: ScrapeDataForAllGames
                ScrapeDataForAllGames:
                  Type: Map
                  Iterator:
                    StartAt: ScrapeDataForGame
                    States:
                      ScrapeDataForGame:
                        Type: Parallel
                        Next: FinalState
                        Branches:
                        - StartAt: GetPlays
                          States:
                            GetPlays:
                              Type: Task
                              Resource: arn:aws:lambda:us-west-2:104843235006:function:data-scraper-app-${sls:stage}-getPlays
                              ResultPath: $.plays
                              Next: DoPlaysExist
                            DoPlaysExist:
                              Type: Choice
                              Default: WritePlaysToDynamo
                              Choices:
                              - Variable: $.plays[0]
                                IsPresent: false
                                Next: GetPlaysFinalState
                            WritePlaysToDynamo:
                              Type: Task
                              Parameters:
                                date.$: $.date
                                gamePk.$: $.gamePk
                                plays.$: $.plays
                              Resource: arn:aws:lambda:us-west-2:104843235006:function:data-storage-${sls:stage}-writePlaysToDynamo
                              Next: GetPlaysFinalState
                            GetPlaysFinalState:
                              Type: Pass
                              End: true
                        - StartAt: WriteGameDetailToDynamo
                          States:
                            WriteGameDetailToDynamo:
                              Type: Task
                              Parameters:
                                date.$: $.date
                                gamePk.$: $.gamePk
                                gameDetail.$: $.gameDetail
                              Resource: arn:aws:lambda:us-west-2:104843235006:function:data-storage-${sls:stage}-writeGameDetailToDynamo
                              Next: GetGameDetailFinalState
                            GetGameDetailFinalState:
                              Type: Pass
                              End: true
                      FinalState:
                        Type: Pass
                        End: true
                  ResultPath: null
            ResultPath: null
            End: true

resources:
  Resources:
    BTSDataScraperLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: !Join [ /, [ stepFunctions, BTSDataScraper]]
